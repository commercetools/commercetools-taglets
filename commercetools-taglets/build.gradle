apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'java'
apply plugin: 'idea'

apply plugin: 'java-library' // needed to make sure that transitive deps have 'compile' scope

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
group='com.commercetools.build.taglets'

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    scm {
        connection "scm:git:$scmHttpsUrl"
        developerConnection "scm:git:$scmSshUrl"
        url "$scmProjectUrl"
    }
}


task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    dependsOn "javadoc"
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/commercetools/commercetools-sdk-java-v2")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        Maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId group
            artifactId project.name
            version version

            pom {
                name = project.name
                description = project.description
                developers {
                    developer {
                        id = "jenschude"
                        name = "Jens Schulze"
                        email = "jens.schulze@commercetools.com"
                    }
                }
                url = scmHttpsUrl
            }
            pom.withXml {
                def root = asNode()
                root.children().last() + pomConfig
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.Maven
}

tasks.withType(Sign) {
    onlyIf { !version.toString().endsWith("SNAPSHOT") }
    }



dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    implementation 'org.jsoup:jsoup:1.15.4'
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.25.0'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

//setBuildDir 'target'

sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9
